
R version 2.11.1 (2010-05-31)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require("RItools")
Loading required package: RItools
Package SparseM (0.85) loaded.
	   To cite, see citation("SparseM")

> 
> data(nuclearplants)
> 
> ##################################################
> ### Basic uses
> ##################################################
> xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n, data=nuclearplants)
      strata  unstrat                
      stat   std.diff    z           
vars                                 
date          -0.1147 -0.3052        
t1            0.1063  0.2830         
t2            1.0327  2.4674  *      
cap           0.3401  0.8948         
ne            -0.1631 -0.4334        
ct            -0.3080 -0.8121        
bw            0.0451  0.1202         
cum.n         -0.0976 -0.2598        
> 
> xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n, data=nuclearplants,
+          report=c("adj.means","adj.mean.diffs",'std.diffs', 'z.scores', 'chisquare.test'))
      strata  unstrat                                             
      stat       pr=0     pr=1 adj.diff std.diff     z            
vars                                                              
date         68.6182  68.5000  -0.1182  -0.1147  -0.3052          
t1           13.6364  14.0000  0.3636   0.1063   0.2830           
t2           59.3182  69.1000  9.7818   1.0327   2.4674   *       
cap          805.1818 869.8000 64.6182  0.3401   0.8948           
ne           0.2727   0.2000   -0.0727  -0.1631  -0.4334          
ct           0.4545   0.3000   -0.1545  -0.3080  -0.8121          
bw           0.1818   0.2000   0.0182   0.0451   0.1202           
cum.n        8.7273   8.1000   -0.6273  -0.0976  -0.2598          
---Overall Test---
        chisquare df p.value
unstrat      11.5  8   0.177
---
Signif. codes:  0 ‘***’ 0.001 ‘** ’ 0.01 ‘*  ’ 0.05 ‘.  ’ 0.1 ‘   ’ 1 
> 
> xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
+          strata=data.frame(unstrat=factor(character(32)),
+            pt=factor(nuclearplants$pt)),
+          data=nuclearplants,
+          report=c("adj.means","adj.mean.diffs",'std.diffs', 'z.scores', 'chisquare.test'))
      strata  unstrat                                                    pt                                             
      stat       pr=0     pr=1 adj.diff std.diff     z                 pr=0     pr=1 adj.diff std.diff     z            
vars                                                                                                                    
date         68.6182  68.5000  -0.1182  -0.1147  -0.3052           68.4924  68.5903  0.0979   0.0950   0.2923           
t1           13.6364  14.0000  0.3636   0.1063   0.2830            13.3953  14.3488  0.9535   0.2787   0.7918           
t2           59.3182  69.1000  9.7818   1.0327   2.4674   *        59.1802  68.5523  9.3721   0.9894   2.3094   *       
cap          805.1818 869.8000 64.6182  0.3401   0.8948            806.4535 873.0233 66.5698  0.3504   0.9188           
ne           0.2727   0.2000   -0.0727  -0.1631  -0.4334           0.2442   0.2209   -0.0233  -0.0522  -0.1445          
ct           0.4545   0.3000   -0.1545  -0.3080  -0.8121           0.4419   0.3314   -0.1105  -0.2201  -0.5828          
bw           0.1818   0.2000   0.0182   0.0451   0.1202            0.1977   0.1512   -0.0465  -0.1154  -0.3088          
cum.n        8.7273   8.1000   -0.6273  -0.0976  -0.2598           8.7209   7.9012   -0.8198  -0.1275  -0.3397          
---Overall Test---
        chisquare df p.value
unstrat      11.5  8   0.177
pt           10.8  8   0.215
---
Signif. codes:  0 ‘***’ 0.001 ‘** ’ 0.01 ‘*  ’ 0.05 ‘.  ’ 0.1 ‘   ’ 1 
> 
> (xb0 <- xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
+          strata=list(unstrat=NULL, pt=~pt),
+          data=nuclearplants,
+          report=c("adj.means","adj.mean.diffs",'std.diffs', 'z.scores', 'chisquare.test'))
+ )
      strata  unstrat                                                    pt                                             
      stat       pr=0     pr=1 adj.diff std.diff     z                 pr=0     pr=1 adj.diff std.diff     z            
vars                                                                                                                    
date         68.6182  68.5000  -0.1182  -0.1147  -0.3052           68.4924  68.5903  0.0979   0.0950   0.2923           
t1           13.6364  14.0000  0.3636   0.1063   0.2830            13.3953  14.3488  0.9535   0.2787   0.7918           
t2           59.3182  69.1000  9.7818   1.0327   2.4674   *        59.1802  68.5523  9.3721   0.9894   2.3094   *       
cap          805.1818 869.8000 64.6182  0.3401   0.8948            806.4535 873.0233 66.5698  0.3504   0.9188           
ne           0.2727   0.2000   -0.0727  -0.1631  -0.4334           0.2442   0.2209   -0.0233  -0.0522  -0.1445          
ct           0.4545   0.3000   -0.1545  -0.3080  -0.8121           0.4419   0.3314   -0.1105  -0.2201  -0.5828          
bw           0.1818   0.2000   0.0182   0.0451   0.1202            0.1977   0.1512   -0.0465  -0.1154  -0.3088          
cum.n        8.7273   8.1000   -0.6273  -0.0976  -0.2598           8.7209   7.9012   -0.8198  -0.1275  -0.3397          
---Overall Test---
        chisquare df p.value
unstrat      11.5  8   0.177
pt           10.8  8   0.215
---
Signif. codes:  0 ‘***’ 0.001 ‘** ’ 0.01 ‘*  ’ 0.05 ‘.  ’ 0.1 ‘   ’ 1 
> ##########################################################################################
> ### Oddness on LHS of formula
> ##########################################################################################Q
> xBalance(I(pr==1) ~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
+          strata=list(unstrat=NULL, pt=~pt),
+          data=nuclearplants,
+          report=c("adj.means","adj.mean.diffs",'std.diffs', 'z.scores', 'chisquare.test')
+          )
      strata      unstrat                                                            pt                                                 
      stat   I(pr == 1)=0 I(pr == 1)=1 adj.diff std.diff     z             I(pr == 1)=0 I(pr == 1)=1 adj.diff std.diff     z            
vars                                                                                                                                    
date             68.6182      68.5000  -0.1182  -0.1147  -0.3052               68.4924      68.5903  0.0979   0.0950   0.2923           
t1               13.6364      14.0000  0.3636   0.1063   0.2830                13.3953      14.3488  0.9535   0.2787   0.7918           
t2               59.3182      69.1000  9.7818   1.0327   2.4674   *            59.1802      68.5523  9.3721   0.9894   2.3094   *       
cap              805.1818     869.8000 64.6182  0.3401   0.8948                806.4535     873.0233 66.5698  0.3504   0.9188           
ne               0.2727       0.2000   -0.0727  -0.1631  -0.4334               0.2442       0.2209   -0.0233  -0.0522  -0.1445          
ct               0.4545       0.3000   -0.1545  -0.3080  -0.8121               0.4419       0.3314   -0.1105  -0.2201  -0.5828          
bw               0.1818       0.2000   0.0182   0.0451   0.1202                0.1977       0.1512   -0.0465  -0.1154  -0.3088          
cum.n            8.7273       8.1000   -0.6273  -0.0976  -0.2598               8.7209       7.9012   -0.8198  -0.1275  -0.3397          
---Overall Test---
        chisquare df p.value
unstrat      11.5  8   0.177
pt           10.8  8   0.215
---
Signif. codes:  0 ‘***’ 0.001 ‘** ’ 0.01 ‘*  ’ 0.05 ‘.  ’ 0.1 ‘   ’ 1 
> 
> 
> ###(b0 <- xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###                ~factor(pt), nuclearplants))
> #####################################################
> ###
> ###
> #####################################################
> ###### Test balance on v-bles one at a time.
> #####################################################
> ### xBalance(pr~ date, ~factor(pt), nuclearplants)
> ###
> #####################################################
> ###### Factor handling
> #####################################################
> ###a0 <- xBalance(pr~ date + t1 + t2 + cap + CUM.N, 
> ###               ~factor(pt),
> ###               data.frame(nuclearplants,
> ###                          CUM.N=cut(nuclearplants$cum.n, c(0,2,5,21), include=TRUE)),
> ###               chisq=FALSE)
> ###xBalance(pr~ date + t1 + t2 + cap + CUM.N, 
> ###         ~factor(pt),
> ###         data.frame(nuclearplants,
> ###                    CUM.N=cut(nuclearplants$cum.n, c(0,2,5,21), include=TRUE)),
> ###         chisq=TRUE)
> ###a1 <- xBalance(pr~ date + t1 + t2 + cap +
> ###               cut(cum.n, c(0,2,5,21), include=TRUE),
> ###               ~factor(pt),
> ###               nuclearplants)
> ###attributes(a0) <- attributes(a1) <- NULL
> ###all.equal(a0,a1)
> ###
> ###Also, handling bad factors in naImpute (i.e. only one level).
> #####################################################
> ###### When there are NAs in the grouping variable and we're doing
> ###### na.omit=TRUE, we don't want to omit rows with NA on
> ###### the grouping before evaluating fmla.  For me this is of concern
> ###### when fmla has a call to ns() in it, but it's easier to test the issue
> ###### using rank() (-BH)
> #####################################################
> ###nuclearplants$pt1 <- factor(nuclearplants$pt)
> ###nuclearplants$pt1[1:3] <- NA
> ###nuclearplants$rank.t1 <- rank(nuclearplants$t1)
> ###all.equal(nuclearplants$rank.t1[-(1:3)], rank(nuclearplants$t1[-(1:3)]))
> ###### note that the above is not TRUE -- omitting changes the ranks
> ###b1 <- xBalance(pr~rank.t1+t2, ~pt1, data=nuclearplants, na.rm=TRUE)[1,]
> ###b2 <- xBalance(pr~rank(t1)+t2, ~pt1, data=nuclearplants, na.rm=TRUE)[1,]
> ###attributes(b1) <- attributes(b2) <- NULL
> ###all.equal(b2,b1)
> ###
> #####################################################
> ###### finding stratum variable that's in calling
> ###### frame but not in data
> #####################################################
> ###mypt <- factor(nuclearplants$pt)
> ###all.equal(b0, xBalance(pr~date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###                       ~mypt, nuclearplants))
> #####################################################
> ###### * Handling stratum weights                 ###
> #####################################################
> ###### ** Default weightings should evaluate before NAs are removed,
> ###### in my view.  (Note that this will require some re-coding, even before
> ###### nonstandard weighting functionality is added.  However, that
> ###### same re-coding ought to streamline integration of the new functionality.)
> ###b3 <- xBalance(pr~ifelse(pt,rank.t1,0)+t2, ~factor(pt), data=nuclearplants, na.rm=TRUE)[1,c(2,4)]
> ###b4 <- xBalance(pr~ifelse(pt,rank.t1,0)+pt1, ~factor(pt), data=nuclearplants, na.rm=TRUE)[1,c(2,4)]
> ###attributes(b3) <- attributes(b4) <- NULL
> ###all.equal(b3, b4) # Should be TRUE
> ###
> ###### ** Provided they're all nonnegative, they shouldn't
> ###### have to sum to 1.  Ie, the function should handle the re-normalizing.
> ###(my.hmnic.wts <- tapply(nuclearplants$pr, nuclearplants$pt,
> ###                        function(x) {1/(1/sum(x) + 1/sum(!x))}) )
> ###identical(b0,
> ###          xBalance(pr~date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###                   ~factor(pt), nuclearplants,
> ###                   stratum.weights=my.hmnic.wts) )
> ###
> ###### **... unless user specifies "normalize.weights=FALSE"!  (For group-level
> ###### assmt, users may want to work with group-aggregated covariates while folding
> ###### de-aggregation into the weights.)
> #####  NEED TEST HERE
> ###
> ###### ** If stratum.weights is a function, it should
> ###### find v-bles within its data argument.
> ###pr <- nuclearplants$pr ; pr[which.max(pr)] <- 0 
> ###(not.hmnic.wts <- tapply(pr, nuclearplants$pt,
> ###                        function(x) {1/(1/sum(x) + 1/sum(!x))}) )
> ###identical(b0, # This should be FALSE
> ###          xBalance(pr~date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###                   ~factor(pt), nuclearplants,
> ###                   stratum.weights=not.hmnic.wts) )
> ###identical(b0, # Whereas this should be TRUE, if evaluation happens properly
> ###          xBalance(pr~date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###                   ~factor(pt), nuclearplants,
> ###                   stratum.weights=function(data){tapply(data$pr, data$pt,
> ###                     function(x) {1/(1/sum(x) + 1/sum(!x))})} ) )
> ###
> ###### ** If stratum.weights is a function, its
> ###### evaluation should within xBalance's 
> ###### parent frame for objects.
> ###PT <- nuclearplants$pt
> ###identical(b0, # Should be TRUE
> ###          xBalance(pr~date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###                   ~factor(pt), nuclearplants,
> ###                   stratum.weights=function(data){tapply(data$pr, PT,
> ###                     function(x) {1/(1/sum(x) + 1/sum(!x))})} ) )
> ###
> ###### ** If stratum.weights is function to be evaluated within
> ###### data, then it needs to evaluate before na's are removed. (IMHO. -BH)
> ###
> ###### ** If stratum.weights is not a function, require it to specify a nonnegative
> ###### real number weight for each stratum in the reduced levels
> ###### of groups. The following tries should fail.
> ###try(xBalance(pr~.-cost-pt, ~factor(pt), nuclearplants,
> ###             stratum.weights=my.hmnic.wts[-1]) )
> ###try(xBalance(pr~.-cost-pt, ~factor(pt), nuclearplants,
> ###             stratum.weights=c(NA,my.hmnic.wts[-1]) ))
> ###try(xBalance(pr~.-cost-pt, ~factor(pt), nuclearplants,
> ###             stratum.weights=-my.hmnic.wts) )
> ###try(xBalance(pr~.-cost-pt, ~factor(pt), nuclearplants,
> ###             stratum.weights=unlist(list('0'='a', '1'='b')) ) )
> ###
> ###### Non-binary "treatment" variable.
> ###xBalance(cost~ date + t1 + t2 + cap + ne + ct + bw + cum.n, 
> ###         ~factor(pt), nuclearplants)
> ###
> ###xBalance(cost~ date + t1 + t2 + cap + ne + ct + bw + cum.n, 
> ###         ~factor(pt), nuclearplants)
> ###
> ###xBalance(cost~ date + t1 + t2 + cap + ne + ct + bw + cum.n, 
> ###         ~factor(pt), nuclearplants,
> ###         stratum.weights=my.hmnic.wts)
> ###
> ###xBalance(cost~ date + t1 + t2 + cap + ne + ct + bw + cum.n, 
> ###         ~factor(pt), nuclearplants,
> ###         stratum.weights=function(data){tapply(data$pr, data$pt,
> ###                     function(x) {1/(1/sum(x) + 1/sum(!x))})} )
> ###
> #####################################################
> ######        covariate.scaling                   ###
> #####################################################
> ###xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###         ~factor(pt), nuclearplants,
> ###         covariate.scaling=1)
> ###b0[1:2,]
> ###
> #####################################################
> ######   gracefully handle case of no strata w/   ###
> ######   variation in Tx group                    ###
> #####################################################
> ###xBalance(pr~ date + t1,
> ###         ~factor(pt), nuclearplants[c(1,32),])
> ###
> ###
> #####################################################
> ######      PRINT JUST THE CHISQUARE TESTS        ###
> #####################################################
> ###b0[numeric(0),]
> ###
> #####################################################
> ######               CHISQ="only"                 ###
> #####################################################
> ###xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n,
> ###                ~factor(pt), nuclearplants, chisq='only')
> ###
> #####################################################
> ######               xtable method                ###
> #####################################################
> if (require('xtable'))
+   {
+ xtable(xb0)
+ xtable(xb0, caption="Caption!", label="thetable", digits=1,
+        align=rep('l', prod(dim(xb0$result)[2:3])+1),
+        display=c('s', rep(c(rep('fg',5), 's'),2)) #,col.labels= do this one later
+        )
+   }
Loading required package: xtable
% latex table generated in R 2.11.1 by xtable 1.5-6 package
% Thu Aug  5 21:49:38 2010
\begin{table}[ht]
\begin{center}
\begin{tabular}{lllllllllllll}
  \hline
 & pr=0 & pr=1 & adj.diff & std.diff & z &  & pr=0 & pr=1 & adj.diff & std.diff & z &  \\ 
  \hline
date & 69 & 69 & -0.1 & -0.1 & -0.3 &     & 68 & 69 & 0.1 & 0.1 & 0.3 &     \\ 
  t1 & 14 & 14 & 0.4 & 0.1 & 0.3 &     & 13 & 14 &  1 & 0.3 & 0.8 &     \\ 
  t2 & 59 & 69 & 1e+01 &  1 &  2 & *   & 59 & 69 &  9 &  1 &  2 & *   \\ 
  cap & 805 & 870 & 65 & 0.3 & 0.9 &     & 806 & 873 & 67 & 0.4 & 0.9 &     \\ 
  ne & 0.3 & 0.2 & -0.07 & -0.2 & -0.4 &     & 0.2 & 0.2 & -0.02 & -0.05 & -0.1 &     \\ 
  ct & 0.5 & 0.3 & -0.2 & -0.3 & -0.8 &     & 0.4 & 0.3 & -0.1 & -0.2 & -0.6 &     \\ 
  bw & 0.2 & 0.2 & 0.02 & 0.05 & 0.1 &     & 0.2 & 0.2 & -0.05 & -0.1 & -0.3 &     \\ 
  cum.n &  9 &  8 & -0.6 & -0.1 & -0.3 &     &  9 &  8 & -0.8 & -0.1 & -0.3 &     \\ 
   \hline
\end{tabular}
\caption{Caption!}
\label{thetable}
\end{center}
\end{table}
> 
> 
> #####################################################
> ######               include.means                ###
> #####################################################
> ###xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n, 
> ###         ~factor(pt), nuclearplants,
> ###         covariate.scaling=1, include.means=TRUE)
> ###xBalance(pr~ date + t1 + t2 + cap + ne + ct + bw + cum.n, 
> ###         ~factor(pt), nuclearplants, include.means=TRUE)
> ###
> ###
> #####################################################
> ######  na.rm=FALSE with missing covariates       ###
> #####################################################
> ### Should create a new variable (0=not missing,1=missing) and impute missing values with the mean (median is new default)
> 
> set.seed(123)
> testdata<-nuclearplants
> testdata$date[sample(1:32,10)]<-NA
> 
> xBalance(pr ~ date + t1 + t2 + cap + ne + ct + bw + cum.n, data = testdata, 
+     na.rm = FALSE,impfn=mean.default) ##first using the mean to match up with previous versions
            strata  unstrat                
            stat   std.diff    z           
vars                                       
date                0.0203  0.0541         
t1                  0.1063  0.2830         
t2                  1.0327  2.4674  *      
cap                 0.3401  0.8948         
ne                  -0.1631 -0.4334        
ct                  -0.3080 -0.8121        
bw                  0.0451  0.1202         
cum.n               -0.0976 -0.2598        
date.NATRUE         -1.0660 -2.5308 *      
> 
> #####################################################
> ######  handling factor with no obs for a level in a strata  ###
> #####################################################
> 
> testdata<-nuclearplants
> testdata$cum.nF<-factor(testdata$cum.n)
> 
> ##Notice that for most levels of cum.n, there are no obs in one of the two strata
> table(testdata$pt,testdata$cum.n)
   
    1 2 3 5 6 7 8 11 12 14 15 16 17 18 19 20 21
  0 4 3 4 2 1 1 1  0  2  1  1  1  1  1  1  1  1
  1 0 0 0 0 0 1 2  3  0  0  0  0  0  0  0  0  0
>    
> ##    1 2 3 5 6 7 8 11 12 14 15 16 17 18 19 20 21
> ##  0 4 3 4 2 1 1 1  0  2  1  1  1  1  1  1  1  1
> ##  1 0 0 0 0 0 1 2  3  0  0  0  0  0  0  0  0  0
> 
> ##First no missing levels, same in both strata --- looks ok
> xBalance(pr ~ date + t1 + t2 + cap + ne + ct + bw + cum.nF, strata=list(nostrata=NULL,thept=~pt), data = testdata,impfn=mean.default)
         strata nostrata                    thept                
         stat   std.diff    z            std.diff    z           
vars                                                             
date             -0.1147 -0.3052          0.0950  0.2923         
t1               0.1063  0.2830           0.2787  0.7918         
t2               1.0327  2.4674  *        0.9894  2.3094  *      
cap              0.3401  0.8948           0.3504  0.9188         
ne               -0.1631 -0.4334          -0.0522 -0.1445        
ct               -0.3080 -0.8121          -0.2201 -0.5828        
bw               0.0451  0.1202           -0.1154 -0.3088        
cum.nF1          -0.1066 -0.2838          -0.0341 -0.0924        
cum.nF2          0.0302  0.0805           0.0966  0.2610         
cum.nF3          -0.1066 -0.2838          -0.0341 -0.0924        
cum.nF5          0.2194  0.5815           0.2806  0.7509         
cum.nF6          -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF7          -0.3693 -0.9692          -0.4723 -1.1509        
cum.nF8          0.5296  1.3683           0.3786  0.9460         
cum.nF11         0.5296  1.3683           0.2590  0.7454         
cum.nF12         0.2194  0.5815           0.2806  0.7509         
cum.nF14         -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF15         -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF16         -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF17         -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF18         -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF19         -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF20         0.5774  1.4832           0.6378  1.6475  .      
cum.nF21         -0.2548 -0.6742          -0.2282 -0.6070        
> 
> ##Second two missing levels, same in both strata
> ##This doesn't look as good --- we'd prefer to drop levels that don't exist.
> 
> testdata$cum.nF[testdata$cum.n>16]<-NA
> testdata$cum.nF[testdata$cum.n==7]<-NA
> table(testdata$pt,testdata$cum.nF,exclude=c()) ##Notice that the levels don't disappear by default.
      
       1 2 3 5 6 7 8 11 12 14 15 16 17 18 19 20 21 <NA>
  0    4 3 4 2 1 0 1  0  2  1  1  1  0  0  0  0  0    6
  1    0 0 0 0 0 0 2  3  0  0  0  0  0  0  0  0  0    1
  <NA> 0 0 0 0 0 0 0  0  0  0  0  0  0  0  0  0  0    0
> xBalance(pr ~ date + t1 + t2 + cap + ne + ct + bw + cum.nF, strata=list(nostrata=NULL,thept=~pt), data = testdata,na.rm=FALSE,impfn=mean.default)
          strata nostrata                    thept                
          stat   std.diff    z            std.diff    z           
vars                                                              
date              -0.1147 -0.3052          0.0950  0.2923         
t1                0.1063  0.2830           0.2787  0.7918         
t2                1.0327  2.4674  *        0.9894  2.3094  *      
cap               0.3401  0.8948           0.3504  0.9188         
ne                -0.1631 -0.4334          -0.0522 -0.1445        
ct                -0.3080 -0.8121          -0.2201 -0.5828        
bw                0.0451  0.1202           -0.1154 -0.3088        
cum.nF1           -0.1066 -0.2838          -0.0341 -0.0924        
cum.nF2           0.0302  0.0805           0.0966  0.2610         
cum.nF3           -0.1066 -0.2838          -0.0341 -0.0924        
cum.nF5           0.2194  0.5815           0.2806  0.7509         
cum.nF6           -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF7           NaN     0.0000           NaN     0.0000         
cum.nF8           0.5296  1.3683           0.3786  0.9460         
cum.nF11          0.5296  1.3683           0.2590  0.7454         
cum.nF12          0.2194  0.5815           0.2806  0.7509         
cum.nF14          -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF15          -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF16          -0.2548 -0.6742          -0.2282 -0.6070        
cum.nF17          NaN     0.0000           NaN     0.0000         
cum.nF18          NaN     0.0000           NaN     0.0000         
cum.nF19          NaN     0.0000           NaN     0.0000         
cum.nF20          NaN     0.0000           NaN     0.0000         
cum.nF21          NaN     0.0000           NaN     0.0000         
cum.nF.NA         -0.4124 -1.0783          -0.4025 -1.0206        
> 
> ##This isn't right either.
> xBalance(pr ~ date + t1 + t2 + cap + ne + ct + bw + cum.nF, strata=list(nostrata=NULL,thept=~pt), data = testdata,na.rm=TRUE,impfn=mean.default)
         strata nostrata                    thept                
         stat   std.diff    z            std.diff    z           
vars                                                             
date             -0.0693 -0.2602          0.1091  0.4662         
t1               0.1604  0.5520           0.2815  0.9554         
t2               0.9377  2.0968  *        0.8524  1.8952  .      
cap              0.4761  1.1324           0.4887  1.1309         
ne               -0.4517 -1.1088          -0.3323 -0.8303        
ct               -0.0830 -0.2041          0.1107  0.2868         
bw               -0.0689 -0.1529          -0.3216 -0.7283        
cum.nF1          -0.1992 -0.4900          -0.0966 -0.2378        
cum.nF2          -0.0410 -0.1005          0.0546  0.1332         
cum.nF3          -0.1992 -0.4900          -0.0966 -0.2378        
cum.nF5          0.1751  0.4214           0.2668  0.6341         
cum.nF6          -0.2988 -0.7500          -0.2656 -0.6547        
cum.nF7          NaN     0.0000           NaN     0.0000         
cum.nF8          0.4999  1.1558           0.2898  0.6623         
cum.nF11         0.4999  1.1558           0.1159  0.3333         
cum.nF12         0.1751  0.4214           0.2668  0.6341         
cum.nF14         -0.2988 -0.7500          -0.2656 -0.6547        
cum.nF15         -0.2988 -0.7500          -0.2656 -0.6547        
cum.nF16         -0.2988 -0.7500          -0.2656 -0.6547        
cum.nF17         NaN     0.0000           NaN     0.0000         
cum.nF18         NaN     0.0000           NaN     0.0000         
cum.nF19         NaN     0.0000           NaN     0.0000         
cum.nF20         NaN     0.0000           NaN     0.0000         
cum.nF21         NaN     0.0000           NaN     0.0000         
> 
> 
> #####################################################
> ######             WISHLIST                       ###
> #####################################################
> ###
> ###
> ###
> ###
>
